View(filtered_tg)
arrange(filtered_tg,len)
# Now we use nested functions
arrange(filter(ToothGrowth, dose=0.5))
# Now we use nested functions
arrange(filter(ToothGrowth, dose=0.5),len)
# Now we use nested functions
arrange(filter(ToothGrowth, dose==0.5),len)
# Now we use pipes
filtered_toothgrowth <- ToothGrowth %>%
filter(dose==0.5) %>%
arrange(len)
filtered_toothgrowth
View(filtered_toothgrowth)
# Modify
filtered_toothgrowth <- ToothGrowth %>%
filter(dose==0.5) %>%
group_by(supp) %>%
summarize(mean_len = mean(len,na.rm = T), group="drop")
# Now we use pipes
filtered_toothgrowth <- ToothGrowth %>%
filter(dose==0.5) %>%
arrange(len)
# Modify
val <- ToothGrowth %>%
filter(dose==0.5) %>%
group_by(supp) %>%
summarize(mean_len = mean(len,na.rm = T), group="drop")
val
# Find mean tooth
val <- ToothGrowth %>%
filter(dose==0.5) %>%
group_by(supp) %>%
summarize(mean_len = mean(len,na.rm = T), .group="drop")
val
ymd(20200710)
dmy("01-01-2020")
installed.packages(())
installed.packages()
library(lubridate)
mdy("July 10th, 2020")
dmy("7-10-2020")
ymd(20200710)
install.packages("tidyverse")
library(ggplot2)
data("diamonds")
View(diamonds)
head(diamonds)
str(diamonds)
colnames(diamonds)
library("tidyverse")
# Add a new column
mutate(diamonds, carat_2=100*carat)
install.packages("tidyverse")
library("tidyverse")
names <- c("","","","")
age <- c(,,,)
age <- c(, , ,)
age <- c(0,0 ,0 ,0)
people <- data.frame(names, age)
head(people)
str(people)
glimpse(people)
colnames(people)
mutate(people, age_in_20 = age + 20)
people$names[1] <- "Velcro"
people
library(tidyverse)
data("diamonds")
as_tibble(diamonds)
data()
data(mtcars)
mtcars
library(tidyverse)
readr_example()
readin_data <- read_csv(readr_example("mtcars.csv"))
readin_data
read_csv(readr_example("mtcars.csv"))
spec()
spec(readr_example("mtcars.csv"))
install.packages("here")
library("here")
# Simplify data cleaning tasks
install.packages("skimr") # easier summary data
library("skimr")
install.packages("janitor")
library("janitor")
install.packages("dplyr")
library("dplyr")
# Palmer penguins
install.packages("palmerpenguins")
library("palmerpenguins")
skim_without_charts(penguins)
skim_without_charts(penguins)
glimpse(penguins)
head(penguins)
penguins %>%
select(species)
penguins %>%
select(-species)
penguins %>%
rename(island_new=island)
# rename with makes column names more consistent
rename_with(penguins, toupper)
rename_with(penguins, tolower)
# clean names function
clean_names(penguins)
skim_without_charts(penguins)
glimpse(penguins)
library("palmerpenguins")
install.packages("tidyverse")
library("tidyverse")
penguins %>%
arrange(bill_length_mm)
penguins %>%  arrange(-bill_length_mm)
penguins2 <- penguins %>% arrange(-bill_length_mm)
View(penguins2)
# Group by is combined with other functions. Group by some column and then use
# a function on each group
penguins %>%
group_by(island) %>%
drop_na() %>%
summartize(mean_bill_length_mm = mean(bill_length_mm))
# Group by is combined with other functions. Group by some column and then use
# a function on each group
penguins %>%
group_by(island) %>%
drop_na() %>%
summarize(mean_bill_length_mm = mean(bill_length_mm))
penguins %>%
group_by(island) %>%
drop_na() %>%
summarize( max_bill_length = max(bill_length_mm) )
penguins %>%
group_by(species, island) %>%
drop_na() %>%
summarize(max_bl = max(bill_length_mm), mean_bl=mean(bill_length_mm))
# Can filter data
penguins %>%
filter(species == "Adelie")
id <- c(1:10)
name <- c("John Mendes", "Rob Stewart", "Rachel Abrahamson", "Christy Hickman", "Johnson Harper", "Candace Miller", "Carlson Landy", "Pansy Jordan", "Darius Berry", "Claudia Garcia")
job_title <- c("Professional", "Programmer", "Management", "Clerical", "Developer", "Programmer", "Management", "Clerical", "Developer", "Programmer")
id <- c(1:10)
name <- c("John Mendes", "Rob Stewart", "Rachel Abrahamson", "Christy Hickman", "Johnson Harper", "Candace Miller", "Carlson Landy", "Pansy Jordan", "Darius Berry", "Claudia Garcia")
job_title <- c("Professional", "Programmer", "Management", "Clerical", "Developer", "Programmer", "Management", "Clerical", "Developer", "Programmer")
employee <- data.frame(id, name, job_title)
print(employee)
# Want to separate first and last name
separate(employee, name, into=c("first_name", "last_name"), sep=" ")
install.packages("tidyverse")
library(tidyverse)
# Want to separate first and last name
separate(employee, name, into=c("first_name", "last_name"), sep=" ")
employee
# Want to separate first and last name
employee <- separate(employee, name, into=c("first_name", "last_name"), sep=" ")
employee
employee <- unite(employee, "name", first_name, last_name, sep=" ")
employee
# New variables
install.packages("palmerpengiuns")
library(palmerpenguins)
View(penguins)
penguins %>%
mutate(body_mass_kg=body_mass_g/1000)
penguins
penguins %>%
mutate(body_mass_kg=body_mass_g/1000, flipper_length_mm/1000)
colnames(penguins)
penguins2 <- penguins %>%
mutate(body_mass_kg=body_mass_g/1000, flipper_length_mm/1000)
colnames(penguins2)
penguins2 <- penguins %>%
mutate(body_mass_kg=body_mass_g/1000, flipper_length_m=flipper_length_mm/1000)
colnames(penguins2)
penguins
arrange(penguins, bill_length_mm)
install.packages("Tmisc")
library(Tmisc)
data(quartet)
View(quartet)
quartet %>%
group_by(set) %>%
summarize(mean(x),sd(x),mean(y),sd(y),cor(x,y))
ggplot(quartet,
aex(x,y) + geom_point()
+ geom_smooth(method=lm, se=FALSE)
+facet_wrap(-set))
ggplot(quartet,
aes(x,y) + geom_point()
+ geom_smooth(method=lm, se=FALSE)
+facet_wrap(-set))
ggplot(quartet,
aes(x,y) + geom_point()
+ geom_smooth(method=lm, se=FALSE)
+facet_wrap(-quartet$set))
ggplot(quartet,
aes(x,y) + geom_point()
+ geom_smooth(method=lm, se=FALSE)
+facet_wrap(set))
ggplot(quartet,
aes(x,y) + geom_point()
+ geom_smooth(method=lm, se=FALSE)
+facet_wrap(quartet$set))
+facet_wrap(quartet$set))
+facet_wrap(quartet$set)
ggplot(quartet,aes(x,y)) + geom_point() +
geom_smooth(method=lm, se=FALSE) +
facet_wrap(quartet$set)
install.packages("datasauRus")
library(datasauRus)
ggplot(datasaurus_dozen,aes(x=x,y=y,color=dataset)) +
geom_point() +
theme_void() +
theme(legend.position="none")+
facet_wrap(~dataset)
install.packages("simdesign")
install.packages("SimDesign")
library(SimDesign)
library("SimDesign")
actual_temp <- c(68.3,70,72.4,71,67,70)
install.packages("SimDesign")
library("SimDesign")
actual_temp <- c(68.3,70,72.4,71,67,70)
predicted_temp <- c(67.9, 69, 71.5, 70,67, 69)
bias(actual_temp, predicted_temp)
actual_sales <- c(150, 203, 137, 247, 116, 287)
predicted_sales <- c(200, 300, 150, 250, 150, 300)
bias(actual_sales, predicted_sales)
install.packages("tidyverse")
install.packages("skimr")
install.packages("janitor")
library(tidyverse)
library(skimr)
library(janitor)
hotel_bookings <- read_csv("C:/Users/aidan/OneDrive/Desktop/data-analytics-certificate/Course 7/2023-01-11_hotel_bookings_1.csv")
head(hotel_bookings)
(hotel_bookings)
glimpse()
glimpse(hotel_bookings)
colnames(hotel_bookings)
arrange(hotel_bookings, -lead_time)
head(hotel_bookings)
hotel_bookings_v2 <-
arrange(hotel_bookings, desc(lead_time))
head(hotel_bookings_v2)
max(hotel_bookings$lead_time)
min(hotel_bookings$lead_time)
min(lead_time)
mean(hotel_bookings$lead_time)
mean(hotel_bookings_v2$lead_time)
hotel_bookings_city <-
filter(hotel_bookings, hotel_bookings$hotel=="City Hotel")
head(hotel_bookings_city)
mean(hotel_bookings_city$lead_time)
hotel_summary <-
hotel_bookings %>%
group_by(hotel) %>%
summarise(average_lead_time=mean(lead_time),
min_lead_time=min(lead_time),
max_lead_time=max(lead_time))
head(hotel_summary)
penguins %>%
drop_na() %>%
group_by(species) %>%
summarize(max_flipper_length = max(flipper_length_mm))
install.packages("tidyverse", "PalmerPenguins")
install.packages("tidyverse")
install.packages("palmerpenguins")
library(tidyverse)
library(palmerpenguins)
data(palmerpenguins)
data(penguins)
force(penguins)
force(penguins_raw)
View(penguins_raw)
View(penguins_raw)
View(penguins)
View(penguins)
View(penguins_raw)
View(penguins_raw)
delete(penguins_raw)
del(penguins_raw)
remove(penguins_raw)
# Plot body mass and flipper length
ggplot(data=penguins) +
geom_point(mapping=aex(x=flipper_length_mm,y=body_mass_g))
# Plot body mass and flipper length
ggplot(data=penguins) +
geom_point(mapping=aes(x=flipper_length_mm,y=body_mass_g))
hotel_bookings <- read.csv("hotel_bookings.csv")
hotel_bookings <- read.csv("C:/Users/aidan/OneDrive/Desktop/data-analytics-certificate/Course 7/2023-01-11_hotel_bookings_1.csv")
head(hotel_bookings)
colnames(hotel_bookings)
install.packages('ggplot2')
library(ggplot2)
ggplot(data = hotel_bookings) +
geom_point(mapping = aes(x = lead_time, y = children))
hotel_bookings <- drop_na(hotel_bookings)
ggplot(data = hotel_bookings) +
geom_point(mapping = aes(x = lead_time, y = children))
hotel_bookings <- read.csv("C:/Users/aidan/OneDrive/Desktop/data-analytics-certificate/Course 7/2023-01-11_hotel_bookings_1.csv")
install.packages('ggplot2')
library(ggplot2)
ggplot(data = hotel_bookings) +
geom_point(mapping = aes(x = lead_time, y = children))
ggplot(data = hotel_bookings) +
geom_point(mapping = aes(x = stays_in_weekend_nights, y = children))
library(tidyverse)
library(palmerpenguins)
data(penguins)
# Plot body mass and flipper length
ggplot(data=penguins) +
geom_point(mapping=aes(x=flipper_length_mm,y=body_mass_g))
# Plot body mass and flipper length
ggplot(data=penguins) +
geom_point(mapping=aes(x=flipper_length_mm,y=body_mass_g, color=species))
# Plot body mass and flipper length
ggplot(data=penguins) +
geom_point(mapping=aes(x=flipper_length_mm,y=body_mass_g, shape=species))
# Plot body mass and flipper length
ggplot(data=penguins) +
geom_point(mapping=aes(x=flipper_length_mm,y=body_mass_g, shape=species, color=species))
# Plot body mass and flipper length
ggplot(data=penguins) +
geom_point(mapping=aes(x=flipper_length_mm,y=body_mass_g, shape=species, color=species, size=species))
# Plot body mass and flipper length
ggplot(data=penguins) +
geom_point(mapping=aes(x=flipper_length_mm,y=body_mass_g, alpha=species))
ggplot(data=penguins) +
geom_point(mapping=aes(x=flipper_length_mm,y=body_mass_g),color="purple")
ggplot(data=penguins) +
geom_point(mapping=aes(x=flipper_length_mm,y=body_mass_g),color="purple")ggplot(data=penguins) +
ggplot(data=penguins) +
geom_point(mapping=aes(x=flipper_length_mm,y=body_mass_g),color="purple")ggplot(data=penguins) +
ggplot(data=penguins) +
geom_point(mapping=aes(x=flipper_length_mm,y=body_mass_g, shape=species, size=species, alpha=species))
library(tidyverse)
library(palmerpenguins)
data(penguins)
ggplot(data=penguins)+
geom_point(mapping=aes(flipper_length_mm,y=body_mass_g))
ggplot(data=penguins)+
geom_smooth(mapping=aes(flipper_length_mm,y=body_mass_g))
# Using smooth instead of line
ggplot(data=penguins)+
geom_smooth(mapping=aes(flipper_length_mm,y=body_mass_g))+
geom_point(mapping=aes(flipper_length_mm,y=body_mass_g))
# Plot a separate line for each species
ggplot(data=penguins)+
geom_smooth(mapping=aes(flipper_length_mm,y=body_mass_g,linetype=species))
# Plot a separate line for each species
ggplot(data=penguins)+
geom_smooth(mapping=aes(flipper_length_mm,y=body_mass_g,color=species))
ggplot(data=penguins)+
geom_jitter(mapping=aes(flipper_length_mm,y=body_mass_g))
ggplot(data=diamonds)+
geom_bar(mapping=aes(x=cut))
ggplot(data=diamonds)+
geom_bar(mapping=aes(x=cut), color="blue")
ggplot(data=diamonds)+
geom_bar(mapping=aes(x=cut), fill="blue")
ggplot(data=diamonds)+
geom_bar(mapping=aes(x=cut), fill="cyan")
ggplot(data=diamonds)+
geom_bar(mapping=aes(x=cut), fill="dark green")
ggplot(data=diamonds)+
geom_bar(mapping=aes(x=cut, fill=cut))
ggplot(data=diamonds)+
geom_bar(mapping=aes(x=cut, fill=clarity))
# Facets
ggplot(data=penguins)+
facet_wrap(~species)
# Facets
ggplot(data=penguins)+
geom_point(mapping=aes(flipper_length_mm,y=body_mass_g))
# Facets
ggplot(data=penguins)+
geom_point(mapping=aes(flipper_length_mm,y=body_mass_g))+
facet_wrap(~species)
ggplot(data=diamonds)+
geom_bar(mapping=aes(x=cut, fill=clarity))+
facet_wrap(~cut)
ggplot(data=diamonds)+
geom_bar(mapping=aes(x=cut))+
facet_wrap(~cut)
# Two have two facets
ggplot(data=penguins)+
geom_point(mapping=aes(flipper_length_mm,y=body_mass_g,color=species))+
facet_grid(sex~species)
hotel_bookings <- read.csv("hotel_bookings.csv")
hotel_bookings <- read.csv("hotel_bookings.csv")
head(hotel_bookings)
colnames(hotel_bookings)
install.packages('ggplot2')
library(ggplot2)
ggplot(data = hotel_bookings) +
geom_bar(mapping = aes(x = distribution_channel))
ggplot(data = hotel_bookings) +
geom_bar(mapping = aes(x = distribution_channel, fill=deposit_type))
ggplot(data = hotel_bookings) +
geom_bar(mapping = aes(x = distribution_channel, fill=market_segment))
ggplot(data = hotel_bookings) +
geom_bar(mapping = aes(x = distribution_channel)) +
facet_wrap(~deposit_type )
ggplot(data = hotel_bookings) +
geom_bar(mapping = aes(x = distribution_channel)) +
facet_wrap(~deposit_type) +
theme(axis.text.x = element_text(angle = 45))
ggplot(data = hotel_bookings) +
geom_bar(mapping = aes(x = distribution_channel)) +
facet_wrap(~market_segment) +
theme(axis.text.x = element_text(angle = 45))
ggplot(data = hotel_bookings) +
geom_bar(mapping = aes(x = distribution_channel)) +
facet_grid(~deposit_type) +
theme(axis.text.x = element_text(angle = 45))
ggplot(data = hotel_bookings) +
geom_bar(mapping = aes(x = distribution_channel)) +
facet_wrap(~deposit_type~market_segment) +
theme(axis.text.x = element_text(angle = 45))
ggplot(data = hotel_bookings) +
geom_point(mapping = aes(x = lead_time, y = children))
onlineta_city_hotels_v2 <- hotel_bookings %>%
filter(hotel=="City Hotel") %>%
filter(market_segment=="Online TA")
View(onlineta_city_hotels_v2)
library(tidyverse)
library(palmerpenguins)
data(penguins)
data(penguins)
ggplot(data=penguins)+
geom_point(mapping=aes(x=flipper_length_mm,y=body_mass_g,color=species))+
labs(title="Palmber Penguins: Body Mas vs. Flipper Length")
ggplot(data=penguins)+
geom_point(mapping=aes(x=flipper_length_mm,y=body_mass_g,color=species))+
labs(title="Palmber Penguins: Body Mas vs. Flipper Length", subtitle="Sample of three species")
ggplot(data=penguins)+
geom_point(mapping=aes(x=flipper_length_mm,y=body_mass_g,color=species))+
labs(title="Palmer Penguins: Body Mas vs. Flipper Length", subtitle="Sample of three species", caption="Data collected by Dr. Gorman")
ggplot(data=penguins)+
geom_point(mapping=aes(x=flipper_length_mm,y=body_mass_g,color=species))+
labs(title="Palmer Penguins: Body Mas vs. Flipper Length", subtitle="Sample of three species", caption="Data collected by Dr. Gorman")+
annotate("text",x=220,y=3500,label="The Gentoos are the largest")
ggplot(data=penguins)+
geom_point(mapping=aes(x=flipper_length_mm,y=body_mass_g,color=species))+
labs(title="Palmer Penguins: Body Mas vs. Flipper Length", subtitle="Sample of three species", caption="Data collected by Dr. Gorman")+
annotate("text",x=220,y=3500,label="The Gentoos are the largest", color="purple", fontface="bold")
ggplot(data=penguins)+
geom_point(mapping=aes(x=flipper_length_mm,y=body_mass_g,color=species))+
labs(title="Palmer Penguins: Body Mas vs. Flipper Length", subtitle="Sample of three species", caption="Data collected by Dr. Gorman")+
annotate("text",x=220,y=3500,label="The Gentoos are the largest", color="purple", fontface="bold", angle=25)
p<-ggplot(data=penguins)+
geom_point(mapping=aes(x=flipper_length_mm,y=body_mass_g,color=species))+
labs(title="Palmer Penguins: Body Mas vs. Flipper Length", subtitle="Sample of three species", caption="Data collected by Dr. Gorman")+
annotate("text",x=220,y=3500,label="The Gentoos are the largest", color="purple", fontface="bold", angle=25)
p+annotate("text",x=0,y=0,label="AAAAA")
# For test
ggplot(data = penguins) +
geom_point(mapping = aes(x = flipper_length_mm, y = body_mass_g)) +
labs(title="Penguins")
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = color, fill = cut)) +
facet_wrap(~cut)
install.packages("rmarkdown")
library(rmarkdown)
a = c(1,2,3)
b=c(4,5,6)
df = data.frame(a,b)
df
df %>%
rename(c=a)
setwd("C:\Users\aidan\OneDrive\Desktop\data-analytics-certificate\Course 8\case-study\fitbit-data")
setwd("C:/Users/aidan/OneDrive/Desktop/data-analytics-certificate/Course 8/case-study/fitbit-data")
# Load in packages
install.packages("tidyverse")
library(tidyverse)
data = read_csv("dailyActivity_merged.csv")
View(data)
unique(data$user)
unique(data$Id)
sum(data$LoggedActivitiesDistance)
filter(data$LoggedActivitiesDistance, data$LoggedActivitiesDistance >0)
data$LoggedActivitiesDistance >0
data$LoggedActivitiesDistance[data$LoggedActivitiesDistance>0]
select(data, Id, LoggedTrackerDistance)
select(data, Id, LoggedActivitiesDistance)
select(data, Id, LoggedActivitiesDistance)[data$LoggedActivitiesDistance>0]
ggplot(data) %>%
filter(data, Id=1503960366)
filter(data, Id==1503960366)
data1<-filter(data, Id==1503960366)
ggplot(data1) %>%
geom_point(aes(x=TotalSteps,y=TotalDistance))
geom_point(maaping =aes(x=TotalSteps,y=TotalDistance))
geom_point(mapping =aes(x=TotalSteps,y=TotalDistance))
ggplot(data1) %>%
geom_point(mapping =aes(x=TotalSteps,y=TotalDistance))
type(data1)
class(data1)
data1
data2=select(data1,TotalSteps,TotalDistance)
data2
ggplot(data=data2)
ggplot(data=data2) %>%
geom_point(mapping=aes(x=TotalSteps,y=TotalDistance))
data2 <- data.frame(data2)
ggplot(data=data2) %>%
geom_point(mapping=aes(x=TotalSteps,y=TotalDistance))
ggplot(data=data2) +
geom_point(mapping=aes(x=TotalSteps,y=TotalDistance))
